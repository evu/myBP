/* * Protect window.console method calls, e.g. console is not defined on IE * unless dev tools are open, and IE doesn't define console.debug */(function () {    if (!window.console) {        window.console = {};    }    // union of Chrome, FF, IE, and Safari console methods    var m = [        "log", "info", "warn", "error", "debug", "trace", "dir", "group",        "groupCollapsed", "groupEnd", "time", "timeEnd", "profile", "profileEnd",        "dirxml", "assert", "count", "markTimeline", "timeStamp", "clear"    ];    // define undefined methods as noops to prevent errors    for (var i = 0; i < m.length; i++) {        if (!window.console[m[i]]) {            window.console[m[i]] = function () {            };        }    }})();document.documentElement.setAttribute('data-ua', navigator.userAgent);jQuery(document).ready(function($){    Site.init();});var Site = (function($) {    // Aliased Variables    var cfg, throttle, helper, loader;     // DOM caching    var $win = $(window),        $doc = $(document);    // Globals    var window_width = $win.width(),        window_height = $win.height(),        scroll_top = $doc.scrollTop();        return {        settings: {            speedIn: 600,            speedOut: 300,            easing: [0.230, 1.000, 0.320, 1.000] // easeOutQuint         },        init: function() {            cfg = this.settings;            throttle = this.handlers.throttle;            helper = this.helpers;            loader = this.handlers.loader;            // Share Popups            helper.check('.social-share', this.shareHandler);            // Form validation & ajax            helper.check('.js-process-form', this.formProcess);        },        handlers: {            // Throttle resize and scroll events            throttle: function(handler, func) {                var eventHappend = false,                    throttleOps = {};                throttleOps[handler] = function(){                    eventHappend = true;                }                             $win.on(throttleOps);                             setInterval(function() {                    if ( eventHappend ) {                        eventHappend = false;                        if (handler === 'resize') {                            window_width = $win.width();                            window_height = $win.height();                        }                        if (handler === 'scroll') {                            scroll_top = $doc.scrollTop();                        }                        func();                    }                }, 250);            },            loader: function(func) {                $win.on('load', func);            }        },        helpers: {            // Get a random Num between min and max            getRandom: function(min, max) {                return Math.floor(Math.random() * (max - min + 1)) + min;            },                        // Check if element exists and run function            check: function(el, func) {                if ($(el).length) {                    func();                }            }        },        // Open Share popups in new window        sharePopup: function() {            $('.social-share a').on('click', function(){                if ($(this).attr('href').indexOf('http') === 0) {                    var newwindow = window.open($(this).attr('href'), '', 'height=450, width=700');                                        if (window.focus) {                        newwindow.focus();                    }                    return false;                }            });        },        // Process Forms.        formProcess: function() {            var $forms = $('.js-process-form');            $forms.each(function(){                $(this).validate({                    ignore: '',                    rules: {                        upload: {                            required: true                        }                    },                    onfocusout: function(element) {                        this.element(element);                    },                    onkeyup: false                });            });            $forms.on('submit', function(e){                e.preventDefault();                var $this = $(this);                if ($this.valid()) {                    $.ajax({                        url: base_dir+"/wp-admin/admin-ajax.php",                        type:'POST',                        data: $.extend({                            action:     'contact_email'                        }, $this.serializeObject()),                        dataType: 'json',                        success: function(data){                            //Access the returned JSON                            $this.html('<h1>' + data.message + '</h1>');                        }                    });                }            });        }    };})(jQuery);// Serialized Form DatajQuery.noConflict();    (function( $ ) {    $.fn.serializeObject = function(){        var o = {};        var a = this.serializeArray();        $.each(a, function() {            if (o[this.name] !== undefined) {                if (!o[this.name].push) {                    o[this.name] = [o[this.name]];                }                o[this.name].push(this.value || '');            } else {                o[this.name] = this.value || '';            }        });        return o;    };})(jQuery);